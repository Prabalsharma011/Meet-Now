Random video call

for animation use lotty library
 add lottie library
 sign in lottie files
 download json file of animation
 create a resource directory with raw name folder and paste the json file in raw folder

XML code


    <com.airbnb.lottie.LottieAnimationView
        android:layout_width="250dp"
        android:layout_height="250dp"
        android:layout_marginTop="30dp"
        app:layout_constraintBottom_toBottomOf="@+id/imageView4"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/imageView5"
        app:lottie_autoPlay="true"
        app:lottie_loop="true"
        app:lottie_rawRes="@raw/radar">

    </com.airbnb.lottie.LottieAnimationView>


// For google auth to firebase
GoogleSignInClient mgoogleSigninclient;
    int RC_SIGN_IN=11;
    LinearLayout signin;

        GoogleSignInOptions gso=new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN).
                requestIdToken(getString(R.string.default_web_client_id)).requestEmail().build();
        mgoogleSigninclient= GoogleSignIn.getClient(this,gso);

        signin=findViewById(R.id.signinbutton);

        signin.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent=mgoogleSigninclient.getSignInIntent();
                startActivityForResult(intent,RC_SIGN_IN);
            }
        });

// Now Store in Firebase
 @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        if(requestCode==RC_SIGN_IN){
            Task<GoogleSignInAccount> task=GoogleSignIn.getSignedInAccountFromIntent(data);
            GoogleSignInAccount account=task.getResult();
            authwithGoogle(account.getIdToken());
        }
    }

    private void authwithGoogle(String idToken) {
        AuthCredential credential= GoogleAuthProvider.getCredential(idToken,null);
        auth.signInWithCredential(credential).addOnCompleteListener(new OnCompleteListener<AuthResult>() {
            @Override
            public void onComplete(@NonNull Task<AuthResult> task) {
                if(task.isSuccessful()){
                    FirebaseUser user=auth.getCurrentUser();

                }else{

                }
            }
        });
    }
}
